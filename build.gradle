plugins {
    id 'org.parchmentmc.writtenbooks' version '0.+'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'groovy'
}

project.group = 'org.parchmentmc'

repositories {
    maven {
        name = 'ParchmentMC'
        url = 'https://ldtteam.jfrog.io/artifactory/parchmentmc/'
    }
    maven {
        name = 'MinecraftForge'
        url = 'https://maven.minecraftforge.net/'
        metadataSources {
            mavenPom()
            gradleMetadata()
        }
    }
    gradlePluginPortal()
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation 'de.undercouch:gradle-download-task:5.1.0'
    implementation 'com.squareup.moshi:moshi:1.13.0'
    implementation 'net.minecraftforge:srgutils:0.4.9'
    implementation 'org.parchmentmc.feather:io-moshi:1.0.0.3'
    implementation 'com.google.guava:guava:31.1-jre'

    compileOnly 'net.minecraftforge:groovydslimprover:1.0.4'
    implementation 'net.minecraftforge:groovydslimprover:1.0.4:runtime'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(8)
    withSourcesJar()
    withJavadocJar()
}

gradlePlugin {
    // Define the plugin
    plugins.register('compass') {
        id = 'org.parchmentmc.compass'
        implementationClass = 'org.parchmentmc.compass.CompassPlugin'
    }
}

publishing {
    repositories {
        maven {
            name 'projectLocal'
            url "file://${rootProject.file('repo').absolutePath}"
        }
    }
}

tasks.named('wrapper', Wrapper) {
    distributionType = Wrapper.DistributionType.ALL
}

tasks.withType(GroovyCompile).configureEach {
    it.options.incremental = true
    it.groovyOptions.optimizationOptions(['indy': true])
}
